name: Trivy Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy_scan:
    name: Trivy Scan
    runs-on: ubuntu-latest

    steps:
      # Checkout du code
      - uses: actions/checkout@v2

      # Installation de JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      # Connexion à Docker Hub (optionnel)
      - name: Login to Docker Hub (optional)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construction avec Maven
      - name: Build with Maven
        run: mvn clean verify

      # Cache des packages Maven
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Construction et push de l'image pour le test
      - name: Build & push image to test
        id: build_and_push_test
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: callme7liwa/github-action-trivy-test
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Exécution de l'analyse de vulnérabilités Trivy
      - name: Run Trivy vulnerability scanner
        id: trivy_scan
        uses: aquasecurity/trivy-action@master
        with:
          # Image à analyser
          image-ref: 'callme7liwa/github-action-trivy-test'
          # Format du rapport
          format: 'table'
          # Arrêt du workflow en cas de vulnérabilités critiques
          exit-code: '0'
          # Ignorer les vulnérabilités non corrigées
          ignore-unfixed: true
          # Types de vulnérabilités à rechercher
          vuln-type: 'os,library'

      - name: Send report by email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.example.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: durapp123@gmail.com
          to: ayoubseddiki132@gmail.com
          subject: "Trivy Scan Report"
          body: "Please find attached the Trivy scan report."
          attachments: 'trivy-results.sarif'

      # Téléchargement des résultats de l'analyse Trivy dans l'onglet Sécurité de GitHub
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Fichier SARIF à télécharger
          sarif_file: 'trivy-results.sarif'

      # Construction et push de l'image pour le déploiement
      - name: Build & push image to deployment
        # Dépend du succès de l'analyse Trivy
        if: ${{ steps.trivy_scan.outcome == 'success' }}
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: callme7liwa/github-action-with-trivy
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
